version: '3.8'

services:
  db:
    image: postgres
    env_file:
      - .env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

    pgadmin:
      image: dpage/pgadmin4:latest
      env_file:
        - .env.dev
      ports:
        - "8080:80"
      depends_on:
        - db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: "redis:6.2"
    ports:
      - "6379:6379"

  celery1:
    build:
      context: .
      dockerfile: DockerfileCelerySubscription
    command: celery -A shared.celery_app:subscriptions_celery_app worker --loglevel=info &
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq

  celery2:
    build:
      context: .
      dockerfile: DockerfileCeleryNewsCollection
    command: celery -A shared.celery_app:news_collector_celery_app worker --loglevel=info &
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq

  bot_app:
    build:
      context: .
      dockerfile: DockerfileBotApp
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq

  alembic:
    build:
      context: .
      dockerfile: DockerfileAlembic
    env_file:
      - .env.dev
    depends_on:
      - db

  tdata:
    build:
      context: .
      dockerfile: DockerfileTdata
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
      - celery1

  subscription_service:
    build:
      context: .
      dockerfile: DockerfileSubscriptionService
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
      - celery1
      - tdata

  news_collection_service:
    build:
      context: .
      dockerfile: DockerfileNewsCollectionService
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
      - celery2
      - tdata

  digest_service:
    build:
      context: .
      dockerfile: DockerfileDigestService
    env_file:
      - .env.dev
    depends_on:
      - db
      - rabbitmq
      - celery2
      - tdata

volumes:
  postgres_data: